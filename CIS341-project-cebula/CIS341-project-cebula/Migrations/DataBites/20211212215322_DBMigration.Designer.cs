// <auto-generated />
using System;
using CIS341_project_cebula.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIS341_project_cebula.Migrations.DataBites
{
    [DbContext(typeof(DataBitesContext))]
    [Migration("20211212215322_DBMigration")]
    partial class DBMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CIS341_project_cebula.Models.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("LikeId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentPostId")
                        .HasColumnType("int");

                    b.Property<int?>("RootPostId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(75)")
                        .HasMaxLength(75);

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("ParentPostId");

                    b.HasIndex("RootPostId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(75)")
                        .HasMaxLength(75);

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("TopicId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Suspended")
                        .HasColumnType("bit");

                    b.HasKey("UserAccountId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Like", b =>
                {
                    b.HasOne("CIS341_project_cebula.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIS341_project_cebula.Models.UserAccount", "UserAccount")
                        .WithMany("Likes")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Post", b =>
                {
                    b.HasOne("CIS341_project_cebula.Models.Post", "ParentPost")
                        .WithMany("Replies")
                        .HasForeignKey("ParentPostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CIS341_project_cebula.Models.Post", "RootPost")
                        .WithMany("Comments")
                        .HasForeignKey("RootPostId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CIS341_project_cebula.Models.Topic", "Topic")
                        .WithMany("Posts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIS341_project_cebula.Models.UserAccount", "UserAccount")
                        .WithMany("Posts")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Report", b =>
                {
                    b.HasOne("CIS341_project_cebula.Models.UserAccount", "UserAccount")
                        .WithMany("Reports")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("CIS341_project_cebula.Models.Topic", b =>
                {
                    b.HasOne("CIS341_project_cebula.Models.UserAccount", "UserAccount")
                        .WithMany("Topics")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
